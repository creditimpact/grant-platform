module.exports = function rateLimit(options = {}) {
  const hits = new Map();
  const windowMs = options.windowMs || 60000;
  const limit = options.limit || options.max || 60;
  const keyGen = options.keyGenerator || ((req) => req.ip);
  const skip = options.skip || (() => false);
  const handler = options.handler || ((req, res) => {
    res.status(429).send('Too Many Requests');
  });
  return async function (req, res, next) {
    if (await skip(req, res)) return next();
    const key = keyGen(req, res);
    const now = Date.now();
    let entry = hits.get(key);
    if (!entry || now > entry.reset) {
      entry = { count: 0, reset: now + windowMs };
    }
    entry.count += 1;
    hits.set(key, entry);
    res.setHeader('X-RateLimit-Limit', String(limit));
    res.setHeader('X-RateLimit-Remaining', String(Math.max(0, limit - entry.count)));
    res.setHeader('X-RateLimit-Reset', String(Math.ceil(entry.reset / 1000)));
    if (entry.count > limit) {
      return handler(req, res, next, { windowMs });
    }
    next();
  };
};
